Реализовать класс Student, который будет хранить результаты выполнения практических работ студента. При этом, вызывать функции/методы не нужно.

При инициализации объекта, передаются следущие параметры
name - имя студента, строка
conf - настройка для практических работ, словарь в формате
conf = {
"lab_max": 10, # количество баллов, доступных за выполнение одной практической работы
"lab_num": 7 # количество практических работ
}.

Экземпляр класса имеет атрибуты:

name - строка, имя студента
conf #lab_max, lab_num
labs - список баллов по практическим работам, количество элементов соответствует lab_num
Класс имеет 2 метода:

set_lab(self, score, number) - принимает три аргумента (один из них - self), сохраняет количество баллов score для практической работы за номером number (практические работы нумеруются от 0 до lab_num-1). При повторной сдаче практической работы засчитывается последнее количество баллов. Аргумент number необязательный, если number не задан тогда баллы начисляются для первой невыполненной практической (когда балл равен нулю), если таких нет метод возвращает строку 'error'. Если number больше lab_num-1 метод также возвращает строку 'error'. Если score больше lab_max, засчитывается lab_max баллов
average_score(self) - возвращает число типа float с округлением до десятых, средний балл по практическим работам. Пример: 4.871 => 4.9
Пример последовательности действий для тестирования класса:
ivan = Student("Ivan", {"lab_max": 5, "lab_num": 4})
ivan.name =>'Ivan'
ivan.labs => [0, 0, 0, 0]
ivan.set_lab(4, 1)
ivan.labs => [0, 4, 0, 0]
ivan.set_lab(5)
ivan.labs => [5, 4, 0, 0]
ivan.average_score() => 2.3
ivan.set_lab(5, 6) => 'error'
ivan.set_lab(8, 2)
ivan.labs => [5, 4, 5, 0]
ivan.set_lab(3)
ivan.labs => [5, 4, 5, 3]
ivan.set_lab(5) => 'error'
ivan.average_score() => 4.3


Задание 2

(20 points possible)
Написать функцию find_best_student(filename) котороя из файла filename (переменная filename - это путь к файлу csv)
создает объекты класса Student, находит студента у которого лучший средний балл по практическим работам и возвращает
 name этого студента. При этом, вызывать функцию find_best_student() не нужно: система автопроверки вызовет написанную
 Вами функцию со значением аргумента filename, предопределенным в системе.

Примечание:
- это задание выполнять после успешного выполнения "Задания 1"
- перед функцией find_best_student вставить реализованый класс Student в "Задании 1"
- при написании кода ниже не забывайте писать и импорт использованных модулей (csv)

Пример csv файла, который будет использоваться при вызове функции find_best_student

name,lab_max,lab_num,l1,l2,l3,l4
Ivan,10,4,0,2,0,4
Ira,10,4,10,0,0,0
Masha,10,4,0,8,8,0
Sasha,10,4,7,0,3,0
Пpимер
Вызов функции: find_best_student('student.csv')
Возвращает: 'Masha'